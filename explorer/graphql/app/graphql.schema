"""
StreamID uniquely identifies a cross-chain stream.
A stream is a logical representation of a cross-chain connection between two chains.
"""
type StreamID {
    "Source chain ID as per https://chainlist.org/"
	SourceChainID: BigInt!
    "Destination chain ID as per https://chainlist.org/"
	DestChainID: BigInt!
}

"""
MsgID uniquely identifies a cross-chain message.
"""
type MsgID {
    "Unique ID of the Stream this message belongs to"
	StreamID: StreamID!
    "Monotonically incremented offset of Msg in the Steam"
	StreamOffset: BigInt!
}

"""
Msg is a cross-chain message.
"""
type Msg {
    "Unique ID of the message"
	MsgID: MsgID!
    "Sender on source chain, set to msg.Sender"
	Sender: String!
    "Target/To address to 'call' on destination chain"
	DestAddress: String!
    "Gas limit to use for 'call' on destination chain"
	DestGasLimit: BigInt!
    "Hash of the source chain transaction that emitted the message"
	TxHash: String!
}

"""
Block represents a cross-chain block.
"""
type Block {
    "Source chain ID as per https://chainlist.org"
    SourceChainID: BigInt!

    "Height of the source chain block"
	BlockHeight: BigInt!

    "Hash of the source chain block"
	BlockHash: String!

    "All cross-chain messages sent/emittted in the block"
    Messages: [Msg!]!

    # "Receipts of all submitted cross-chain messages applied in the block"
	# Receipts  [Receipt!]!

    "Timestamp of the source chain block"
	Timestamp: Time!
}

"""
Some browsers do not work nicely with numbers higher than max Int32.
Therefore BigInt passes these numbers enclosed in string quotes.
"""
scalar BigInt
scalar Time

type Query {
    hello(name: String!): String!
    block(sourceChainID: BigInt!, height: BigInt!): Block
}